with "opengl.gpr";

library project Glfw is
   for Library_Name use "GlfwAda";
   
   type Os_Type is
      ("windows", "linux", "mac");
   Os : Os_Type := external ("GL_Backend", "linux");
   
   type Mode_Type is ("debug", "release");
   Mode : Mode_Type := external ("mode", "debug");
   
   type GLFW_Version_Type is ("2", "3");
   GLFW_Version : GLFW_Version_Type := external ("GLFW_Version", "3");
   
   GLFW_Sources := ("src/glfw");
   case GLFW_Version is
      when "2" => GLFW_Sources := GLFW_Sources & "src/glfw/v2";
      when "3" => GLFW_Sources := GLFW_Sources & "src/glfw/v3";
   end case;
   
   for Source_Dirs use GLFW_Sources;
   for Object_Dir use "obj";
   for Library_Dir use "lib";

   package Ide is
      for Vcs_Kind use "Git";
   end Ide;

   package Builder is
      case Mode is
         when "debug" =>
            for Default_Switches ("ada") use ("-s",
                                              "-gnatE",
                                              "-g");
         when "release" =>
            for Default_Switches ("ada") use ("-s");
      end case;
   end Builder;
   
   package Compiler is
      case Mode is
         when "debug" =>
            for Default_Switches ("ada") use ("-gnat05",
                                              "-g",
                                              "-fstack-check");
         when "release" =>
            for Default_Switches ("ada") use ("-gnat05",
                                              "-O2",
                                              "-gnatn",
                                              "-fstack-check");
      end case;
   end Compiler;

   package Linker is
      case Os is
         when "mac" =>
            case GLFW_Version is
               when "2" =>
                  for Linker_Options use ("-lglfw", "-Wl,-framework,Cocoa");
               when "3" =>
                  for Linker_Options use ("-lglfw3", "-Wl,-framework,Cocoa");
            end case;
         when "windows" =>
            for Linker_Options use ("-lglfw", "-lwinmm", "-lgdi32");
         when "linux" =>
            for Linker_Options use ("-lglfw", "-lX11");
      end case;
   end Linker;
end Glfw;
